{"version":3,"file":"static/js/67.23e51203.chunk.js","mappings":"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","sources":["components/sidebar/index.jsx","components/contact/delete/styled-index.js","components/contact/delete/index.jsx","components/contact/table/index.jsx","components/contact/index.jsx","pages/contact/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { Button, Tooltip } from \"antd\";\r\nimport {\r\n  MenuFoldOutlined,\r\n  MenuUnfoldOutlined,\r\n  UsergroupAddOutlined,\r\n  UserAddOutlined,\r\n  AppstoreOutlined,\r\n  ShoppingCartOutlined,\r\n  FileImageOutlined,\r\n  LoginOutlined,\r\n  CommentOutlined,\r\n  BellOutlined,\r\n  QuestionCircleOutlined,\r\n  UserOutlined,\r\n\r\n} from \"@ant-design/icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { Layout, Menu, theme } from \"antd\";\r\nimport \"./sidebar.css\";\r\nimport logo from \"../../assets/image/logos.png\";\r\nimport { adminGet } from \"../../redux/admin_add/index\";\r\nimport VerticalSidebar from \"../vertical-sidebar\";\r\nimport HorizontalSidebar from \"../horizontal-sidebar\";\r\nconst { Header, Sider, Footer, Content } = Layout;\r\n\r\nconst Sidebar = ({ children }) => {\r\n  const [isChecked, setIsChecked] = useState('false')\r\n  // const isChecked = \r\n  console.log(\"bu herticaldan keldi\", isChecked)\r\n  // const emailSave = window.localStorage.getItem('emails')\r\n  // const text = <span>Выйти</span>;\r\n  // const dispatch = useDispatch();\r\n  // const adminGetState = useSelector((state) => state.adminadd);\r\n  // const rows = adminGetState.userGet?.data;\r\n  // const filterData = rows.filter(elem => elem.email == emailSave)\r\n  // console.log(filterData)\r\n  // useEffect(() => {\r\n  //   dispatch(adminGet());\r\n  // }, []);\r\n  // const [collapsed, setCollapsed] = useState(false);\r\n  // const cookies = new Cookies();\r\n  // const pathname = useLocation();\r\n  // const navigate = useNavigate();\r\n  // const HandleLogout = () => {\r\n  //   cookies.remove(\"token\");\r\n  //   setTimeout(() => {\r\n  //     navigate(\"/\");\r\n  //     window.location.reload();\r\n  //   }, \"1500\");\r\n  // };\r\n  // const {\r\n  //   token: { colorBgContainer },\r\n  // } = theme.useToken();\r\n\r\n\r\n  console.log( \"okey\" )\r\n  return (\r\n    <>\r\n\r\n\r\n\r\n    </>\r\n    // <Layout style={{ height: \"100vh\", position: \"relative\" }}>\r\n    //   <Sider\r\n    //     style={{ backgroundColor: \"#5A79E5\" }}\r\n    //     width={240}\r\n    //     trigger={null}\r\n    //     collapsible\r\n    //     collapsed={collapsed}\r\n    //   >\r\n    //     <Menu\r\n    //       theme=\"dark\"\r\n    //       mode=\"inline\"\r\n    //       defaultSelectedKeys={[\"1\"]}\r\n    //       items={[\r\n    //         {\r\n    //           key: \"1\",\r\n    //           icon: <UserAddOutlined />,\r\n    //           label: (\r\n    //             <NavLink\r\n    //               to={\"/adminadd\"}\r\n    //               className={pathname == \"/adminadd\" ? \"active\" : \"\"}\r\n    //             >\r\n    //               <span class=\"title\">Админ</span>\r\n    //             </NavLink>\r\n    //           ),\r\n    //         },\r\n    //         {\r\n    //           key: \"2\",\r\n    //           icon: <UsergroupAddOutlined />,\r\n    //           label: (\r\n    //             <NavLink to={\"/contact\"}>\r\n    //               <span class=\"title\">Заявки</span>\r\n    //             </NavLink>\r\n    //           ),\r\n    //         },\r\n    //         {\r\n    //           key: \"3\",\r\n    //           icon: <AppstoreOutlined />,\r\n    //           label: (\r\n    //             <NavLink\r\n    //               to={\"/category\"}\r\n    //               className={pathname == \"/category\" ? \"active\" : \"\"}\r\n    //             >\r\n    //               <span class=\"title\">Каталог</span>\r\n    //             </NavLink>\r\n    //           ),\r\n    //         },\r\n    //         {\r\n    //           key: \"4\",\r\n    //           icon: <ShoppingCartOutlined />,\r\n    //           label: (\r\n    //             <NavLink\r\n    //               to={\"/product\"}\r\n    //               className={pathname == \"/product\" ? \"active\" : \"\"}\r\n    //             >\r\n    //               <span class=\"title\">Продукт</span>\r\n    //             </NavLink>\r\n    //           ),\r\n    //         },\r\n    //         {\r\n    //           key: \"5\",\r\n    //           icon: <ShoppingCartOutlined />,\r\n    //           label: (\r\n    //             <NavLink\r\n    //               to={\"/news\"}\r\n    //               className={pathname == \"/news\" ? \"active\" : \"\"}\r\n    //             >\r\n    //               <span class=\"title\">блог</span>\r\n    //             </NavLink>\r\n    //           ),\r\n    //         },\r\n    //       ]}\r\n    //       style={{ backgroundColor: \"#1fab8a\" }}\r\n    //     />\r\n    //     <div className=\"logo_wrapp\">\r\n    //       <img src={logo} alt=\"\" />\r\n    //     </div>\r\n    //   </Sider>\r\n    //   <Layout className=\"site-layout\">\r\n    //     <Header\r\n    //       style={{\r\n    //         padding: 0,\r\n    //         background: \"#1fab8a\",\r\n    //         display: \"flex\",\r\n    //         justifyContent: \"space-between\",\r\n    //       }}\r\n    //     >\r\n    //       <div className=\"logos\">\r\n    //         {React.createElement(\r\n    //           collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\r\n    //           {\r\n    //             className: \"trigger\",\r\n    //             onClick: () => setCollapsed(!collapsed),\r\n    //           }\r\n    //         )}\r\n\r\n    //       </div>\r\n    //       <div className=\"left\">\r\n    //         <div className=\"icons\">\r\n    //           <CommentOutlined style={{ fontSize: \"16px\", color: \"#fff\" }} />\r\n    //           <BellOutlined style={{ fontSize: \"16px\", color: \"#fff\" }} />\r\n    //           <QuestionCircleOutlined\r\n    //             style={{ fontSize: \"20px\", color: \"#fff\" }}\r\n    //           />\r\n    //         </div>\r\n    //         <div className=\"profile\">\r\n    //           <div className=\"profile-right\">\r\n    //             {filterData.map((elem) => (\r\n    //               <>\r\n    //                 <p className=\"profile_name\">{elem.name}</p>\r\n    //                 <p className=\"profile_email\">{elem.email}</p>\r\n    //               </>\r\n    //             ))}\r\n    //           </div>\r\n    //           <UserOutlined className=\"user-icon\" />\r\n    //           <Tooltip title={text}>\r\n    //             <button onClick={HandleLogout}>\r\n    //               <LoginOutlined />\r\n    //             </button>\r\n    //           </Tooltip>\r\n    //         </div>\r\n    //       </div>\r\n    //     </Header>\r\n\r\n    //     <Content\r\n    //       style={{\r\n    //         margin: \"24px 16px\",\r\n    //         padding: 24,\r\n    //         minHeight: 280,\r\n    //         background: \"#EEEFF5\",\r\n    //         overflowY: \"auto\",\r\n    //         height: \"85vh\",\r\n    //       }}\r\n    //     >\r\n    //       {children}\r\n    //     </Content>\r\n    //     <Footer\r\n    //       style={{\r\n    //         textAlign: 'center',\r\n    //         background: \"transparent\",\r\n    //         color: \"rgb(31, 171, 138)\",\r\n    //         fontWeight: '500'\r\n    //       }}\r\n    //     >\r\n    //       ©2023 Created by Kamronbey\r\n    //     </Footer>\r\n    //   </Layout>\r\n    // </Layout>\r\n  );\r\n};\r\nexport default Sidebar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    h3{\r\n        text-align: center;\r\n        font-size: 26px;\r\n        text-transform: uppercase;  \r\n    }\r\n    p{\r\n        text-align: center;\r\n        margin-top: 20px;\r\n        color: rgb(235, 99, 99);\r\n    }\r\n    button{\r\n        padding: 10px 20px;\r\n        font-size: 26px;\r\n        background-color: black;\r\n        border: 2px solid white;\r\n        border-radius: 10px;\r\n        color: white;\r\n        cursor: pointer;\r\n    }\r\n    /* .Buttons{\r\n        display: flex;\r\n        justify-content: space-around;\r\n        margin-top: 40px;\r\n    } */\r\n`","import ModalCommon from \"../../common/Modal/Modal\";\r\nimport { Wrapper } from \"./styled-index\";\r\nimport { Row, Col } from \"react-grid-system\";\r\nimport \"./styles.css\";\r\n\r\nfunction Delete({ openDelete, handleCloseDelete, HandleDelete }) {\r\n  return (\r\n    <>\r\n      <ModalCommon\r\n        width={340}\r\n        open={openDelete}\r\n        handleClose={handleCloseDelete}\r\n      >\r\n        <Wrapper>\r\n          <h3>Вы уверены, что хотите удалить данные?</h3>\r\n          <div className=\"Buttons\">\r\n            <Row className=\"row\">\r\n              <Col className=\"col\" lg={6}>\r\n                <button onClick={HandleDelete}>\r\n                  {\" \"}\r\n                  <i class=\"bx bx-check\"></i> Да\r\n                </button>\r\n              </Col>\r\n              <Col className=\"col\" lg={6}>\r\n                <button onClick={handleCloseDelete}>\r\n                  {\" \"}\r\n                  <i class=\"bx bx-x\"></i> Нет\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Wrapper>\r\n      </ModalCommon>\r\n    </>\r\n  );\r\n}\r\nexport default Delete;\r\n","import * as React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { PostContact, GetContact } from \"../../../redux/contact\";\r\nimport TableCommon from \"../../common/table\";\r\nimport { Popover, Space } from 'antd';\r\nimport { useState } from \"react\";\r\n\r\nimport './styles.css'\r\n\r\nexport default function TableAdd({ onClickDelete, HandleDelete }) {\r\n\r\n  const ContactGetState = useSelector(\r\n    (state) => state.contact.getContact?.Data\r\n  );\r\n\r\n  const contactPostState = useSelector(\r\n    (state) => state.contact\r\n  );\r\n  console.log(contactPostState.postContact.Success == true ? 'ok' : 'no')\r\n  console.log(ContactGetState)\r\n  const dispatch = useDispatch();\r\n  const DateFormat = (date) => {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n\r\n    return [day, month, year].join(\".\");\r\n  };\r\n\r\n  const data = [];\r\n  ContactGetState.map((elem, index) => {\r\n    data.push({\r\n      data: index + 1,\r\n      key: elem.id,\r\n      Имя: elem.name,\r\n      Телефонныйномер: elem.phone_number,\r\n      Элпочта: elem.email,\r\n      Времяденьмесяцгод: (\r\n        <div className=\"date_wrap\">\r\n          <span className='time_span'>{elem.createdAt.slice(11, 16)}</span>\r\n          <span className=\"date_span\">{DateFormat(elem.createdAt)}</span>\r\n        </div>\r\n      ),\r\n      Удалить: (\r\n        <Space wrap>\r\n          <Popover\r\n            trigger=\"click\"\r\n            placement=\"rightBottom\"\r\n            content={\r\n              <div className=\"content_delete_box\">\r\n                <p>Вы уверены, что хотите удалить эту заявка?</p>\r\n                <div className=\"btn_wrap_delete\">\r\n                  <button className=\"no_btn\">\r\n                    Нет\r\n                  </button>\r\n                  <button onClick={HandleDelete} id={elem.id} className=\"yes_btn\">\r\n                    да\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            }\r\n            title={\r\n              <div className=\"delete_box\">\r\n                <i class='bx bxs-error-circle'></i>\r\n                <span>Удалите заявка <span>{elem.phone_number}</span></span>\r\n              </div>\r\n            }\r\n          >\r\n            <div className=\"btn-wrap\">\r\n              <button id={elem.id}>\r\n                <i class=\"bx bxs-trash\"></i>\r\n              </button>\r\n            </div>\r\n          </Popover>\r\n        </Space>\r\n\r\n      ),\r\n    });\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    dispatch(GetContact());\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"№\",\r\n      dataIndex: \"data\",\r\n      key: \"data\",\r\n      width: 50,\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: \"Имя\",\r\n      dataIndex: \"Имя\",\r\n      key: \"Имя\",\r\n      fixed: \"left\",\r\n    },\r\n    {\r\n      title: \"Телефонный номер\",\r\n      dataIndex: \"Телефонныйномер\",\r\n      key: \"Телефонныйномер\",\r\n    },\r\n    {\r\n      title: \"Эл. почта\",\r\n      dataIndex: \"Элпочта\",\r\n      key: \"Элпочта\",\r\n    },\r\n    {\r\n      title: \"Время/день/месяц/год\",\r\n      dataIndex: \"Времяденьмесяцгод\",\r\n      key: \"Времяденьмесяцгод\",\r\n    },\r\n    {\r\n      title: \"Удалить\",\r\n      dataIndex: \"Удалить\",\r\n      key: \"Удалить\",\r\n      fixed: \"right\",\r\n      align: 'center'\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <TableCommon\r\n        bordered\r\n        columns={columns}\r\n        data={data}\r\n        pagination={false}\r\n        scroll={{\r\n          y: 330,\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { DeleteContact, GetContact } from \"../../redux/contact/index\";\r\nimport Delete from \"./delete\";\r\nimport TableAdd from \"./table\";\r\nimport { useSelector } from \"react-redux\";\r\nfunction ContactComponent() {\r\n  const contactdelete = useSelector((state) => state.contact);\r\n  const dispatch = useDispatch();\r\n  const [contactId, setContactId] = useState();\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const handleCloseDelete = () => setOpenDelete(false);\r\n  const handleDeleteModal = (e) => {\r\n    setContactId(e.currentTarget.id);\r\n    setOpenDelete(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(GetContact());\r\n  }, []);\r\n\r\n  const HandleDelete = async (e) => {\r\n    await dispatch(DeleteContact(e.currentTarget.id));\r\n    dispatch(GetContact());\r\n  };\r\n  if (contactdelete.deleteContact.Success == true) {\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TableAdd onClickDelete={handleDeleteModal} HandleDelete={HandleDelete} />\r\n      <Delete\r\n        contactId={contactId}\r\n        HandleDelete={HandleDelete}\r\n        openDelete={openDelete}\r\n        handleCloseDelete={handleCloseDelete}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport HeaderTopCommon from \"../../components/common/HeaderTop\";\r\nimport { WrapperContainer } from \"../../style-App\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Sidebar from \"../../components/sidebar\";\r\nimport ContactComponent from \"../../components/contact/index\";\r\nimport { GetContact } from \"../../redux/contact/index\";\r\nimport HorizontalSidebar from \"../../components/horizontal-sidebar\";\r\nimport VerticalSidebar from \"../../components/vertical-sidebar\";\r\nfunction Partner() {\r\n  const [open, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(GetContact());\r\n  }, []);\r\n  const handleClose = () => setOpen(false);\r\n  const handleOpen = () => setOpen(true);\r\n  return (\r\n\r\n\r\n    window.localStorage.getItem(\"checked\") == 'false' ? <HorizontalSidebar>\r\n      <WrapperContainer style={{ marginTop: \"112px\" }}>\r\n        <HeaderTopCommon title={\"Контакт\"} onClick={handleOpen} isBtn={false} />\r\n        <ContactComponent handleClose={handleClose} open={open} />\r\n      </WrapperContainer>\r\n\r\n    </HorizontalSidebar> : <VerticalSidebar>\r\n      <WrapperContainer>\r\n        <HeaderTopCommon title={\"Контакт\"} onClick={handleOpen} isBtn={false} />\r\n        <ContactComponent handleClose={handleClose} open={open} />\r\n      </WrapperContainer>\r\n\r\n    </VerticalSidebar>\r\n  );\r\n}\r\nexport default Partner;\r\n"],"names":["Layout","children","useState","isChecked","console","log","Wrapper","styled","openDelete","handleCloseDelete","HandleDelete","Modal","width","open","handleClose","className","lg","onClick","class","TableAdd","onClickDelete","ContactGetState","useSelector","state","contact","getContact","Data","contactPostState","postContact","Success","dispatch","useDispatch","DateFormat","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","data","map","elem","index","push","key","id","Имя","name","Телефонныйномер","phone_number","Элпочта","email","Времяденьмесяцгод","createdAt","slice","Удалить","wrap","trigger","placement","content","title","React","GetContact","bordered","columns","dataIndex","align","fixed","pagination","scroll","y","contactdelete","contactId","setContactId","setOpenDelete","useEffect","e","DeleteContact","currentTarget","deleteContact","window","location","reload","setOpen","handleOpen","localStorage","getItem","style","marginTop","HeaderTop","isBtn"],"sourceRoot":""}